services:
  py:
    build: docker/py/
    container_name: ${PY_CNAME}
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./:/hiring-platform/
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    container_name: ${DB_CNAME}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - hiring-platform-volume:/var/lib/postgresql/data

#  frontend:
#    image: node:20-alpine
#    container_name: frontend
#    ports:
#      - 3000:3000
#    volumes:
#      - ./:/app
#    working_dir: /app
#    command: npm start
#    environment:
#      - CHOKIDAR_USEPOLLING=true
#    depends_on:
#      - py

  s3:
    image: minio/minio:latest
    container_name: ${S3_HOST_NAME}
    ports:
      - ${S3_PORT_API}:${S3_PORT_API}
      - ${S3_PORT_WEB}:${S3_PORT_WEB}
    environment:
      S3_HOST: ${S3_HOST}
      MINIO_ROOT_USER: ${S3_USER}
      MINIO_ROOT_PASSWORD: ${S3_PASS}
    command: server /data --console-address ":${S3_PORT_WEB}"
    volumes:
      - minio_data:/data

volumes:
  hiring-platform-volume:
  minio_data:
